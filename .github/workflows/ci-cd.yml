name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew clean bootJar --info
          ls -la ./build/libs
          if [ ! -f "./build/libs/csieReserve-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file not found!"
            exit 1
          fi

      - name: Upload code to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./"
          target: "~/app"

      - name: Run docker-compose on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/app

            # ✅ 최신 코드 가져오기
            echo "Pulling latest changes from main branch..."
            git reset --hard origin/main
            git pull origin main
            
            echo "Creating .env.prod file..."
            cat <<EOF > .env.prod
            RDS_ENDPOINT=${{ secrets.RDS_ENDPOINT }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            COOLSMS_API_KEY=${{ secrets.COOLSMS_API_KEY }}
            COOLSMS_API_SECRET=${{ secrets.COOLSMS_API_SECRET }}
            EOF

            # 기존 컨테이너 및 네트워크 종료
            docker-compose -f docker-compose-prod.yml down

            # 컨테이너 재빌드 및 실행
            docker-compose -f docker-compose-prod.yml up -d --build
